# Common proxy configuration for all server blocks
# This file is included inside server blocks
# DNS resolver for dynamic hostname resolution
resolver 127.0.0.11 valid=30s;

# API routes
location /api/ {
    set $api_backend http://api.esos.docker.internal:8080;
    proxy_pass $api_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Handle CORS preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Accept';
        add_header Access-Control-Max-Age 86400;
        return 204;
    }
}

# Keycloak auth routes
location /auth/ {
    set $keycloak_backend http://keycloak.esos.docker.internal:8091;
    proxy_pass $keycloak_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Additional headers for Keycloak proxy detection (only for HTTPS)
    proxy_set_header X-Forwarded-Ssl $forwarded_ssl;
}

# Angular app (default route)
location / {
    set $web_backend http://web.esos.docker.internal:4200;
    proxy_pass $web_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket support for Angular dev server
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Handle Angular routing (SPA)
    proxy_intercept_errors on;
    error_page 404 = @fallback;
}

# Fallback for Angular routing
location @fallback {
    set $web_backend http://web.esos.docker.internal:4200;
    proxy_pass $web_backend;
}

# Health check endpoint
location /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}