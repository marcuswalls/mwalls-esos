# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name localhost;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/dockerhost-wildcard.crt;
    ssl_certificate_key /etc/nginx/ssl/dockerhost-wildcard.key;
    ssl_trusted_certificate /etc/nginx/ssl/dockerhost-root-ca.crt;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # DNS resolver for dynamic hostname resolution
    resolver 127.0.0.11 valid=30s;

    # API routes
    location /api/ {
        set $api_backend http://api.esos.docker.internal:8080;
        proxy_pass $api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle CORS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Accept';
            add_header Access-Control-Max-Age 86400;
            return 204;
        }
    }

    # Keycloak auth routes
    location /auth/ {
        set $keycloak_backend http://keycloak.esos.docker.internal:8091;
        proxy_pass $keycloak_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Additional headers for Keycloak proxy detection
        proxy_set_header X-Forwarded-Ssl on;
    }

    # Angular app (default route)
    location / {
        set $web_backend http://web.esos.docker.internal:4200;
        proxy_pass $web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Angular dev server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Handle Angular routing (SPA)
        proxy_intercept_errors on;
        error_page 404 = @fallback;
    }

    # Fallback for Angular routing
    location @fallback {
        set $web_backend http://web.esos.docker.internal:4200;
        proxy_pass $web_backend;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}